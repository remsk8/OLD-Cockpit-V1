<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_agsa_promonitor_last_metrics</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_agsa_promonitor_last_metrics">metric=JOBS_STATUS^ORmetric=JOBS_DURATION^EQ<item endquery="false" field="metric" goto="false" newquery="false" operator="=" or="false" value="JOBS_STATUS"/>
            <item endquery="false" field="metric" goto="false" newquery="false" operator="=" or="true" value="JOBS_DURATION"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Update Sap Job Status</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
    gs.include('ProMonitorLib');
	var myobj={
		connectorId: current.connectorid.toString(),
		target: current.target.toString()
	};
	
	var promonlib=new ProMonitorLib();
	var inJst = new GlideRecord('x_agsa_promonitor_job_status');
	if ( promonlib.checkIfExist(myobj) == true ){
		// update	
		//gs.log('DEBUG Start Update');
		inJst.addQuery('connectorid',myobj.connectorId);
		inJst.addQuery('target',myobj.target);
		inJst.query();
		if (inJst.next()) {
			inJst.status=promonlib.returnStatus(myobj);
			inJst.last_measure=promonlib.returnUTCsnowDate(current.measuretime);
			inJst.sid=current.sid;
			inJst.duration=parseInt(promonlib.returnDuration(myobj));
			inJst.update();
		}
	} else {
		// insert
		//gs.log('DEBUG Start Insert');
		inJst.initialize();
		inJst.status=promonlib.returnStatus(myobj);
		inJst.connectorid=current.connectorid;
		inJst.sid=current.sid;
		inJst.target=current.target;
		inJst.duration=promonlib.returnDuration(myobj);
		inJst.last_measure=promonlib.returnUTCsnowDate(current.measuretime);
		inJst.insert();
	}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2016-11-23 17:21:13</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>0215db0d371f2200806457d543990efb</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Update Sap Job Status</sys_name>
        <sys_overrides/>
        <sys_package display_value="ProMonitor" source="x_agsa_promonitor">f4323a01371f2200806457d543990ef5</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="ProMonitor">f4323a01371f2200806457d543990ef5</sys_scope>
        <sys_update_name>sys_script_0215db0d371f2200806457d543990efb</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2016-11-23 17:22:51</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=0215db0d371f2200806457d543990efb"/>
</record_update>
